//! This module defines the built-in patterns that `mc` uses by default.
//!
//! These patterns cover common files and directories generated by various build tools
//! and development environments, such as `node_modules`, `target`, `dist`, etc.
//! The patterns are lazily initialized for efficiency using `once_cell`.

use once_cell::sync::Lazy;

/// A lazily initialized static set of built-in patterns.
///
/// This includes lists of directories, files, and exclusion patterns that are
/// commonly found in software projects. These defaults can be extended or overridden
/// through user configuration.
pub static BUILTIN_PATTERNS: Lazy<PatternSet> = Lazy::new(|| {
    PatternSet {
        directories: vec![
            // Build outputs
            "dist",
            "build",
            ".next",
            "out",
            "target",
            // Dependencies
            "node_modules",
            ".venv",
            "vendor",
            // Cache
            ".turbo",
            ".bun",
            ".pytest_cache",
            ".benchmark-cache",
            "coverage",
            ".ropeproject",
            ".ruby-lsp",
            // Tools
            ".idea",
            ".flock",
            ".swarm",
            ".hive-mind",
            ".claude-flow",
            ".roo",
            "memory",
            "coordination",
            // Additional from the shell script
            "claude-flow",
            ".mcp.json",
        ],
        files: vec![
            "*.log",
            "*.tsbuildinfo",
            "package-lock.json",
            "bun.lock",
            "uv.lock",
            "Gemfile.lock",
            "claude-flow.bat",
            "claude-flow.ps1",
            "claude-flow.config.json",
            "AGENTS.md",
            "claude-flow-1.0.70.tgz",
        ],
        exclude: vec![".git", ".github"],
    }
});

/// A structure to hold the different types of built-in patterns.
///
/// These patterns are defined as string slices for maximum efficiency, as they
/// are known at compile time.
pub struct PatternSet {
    /// A list of directory names that are typically safe to delete.
    pub directories: Vec<&'static str>,
    /// A list of file names or glob patterns for files that are typically safe to delete.
    pub files: Vec<&'static str>,
    /// A list of patterns to exclude from cleaning, to prevent accidental deletion.
    pub exclude: Vec<&'static str>,
}